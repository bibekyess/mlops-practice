---
# Source: gpt2-helm/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gpt2-service
  labels:
    app: gpt2-app
    env: dev

spec:
  selector:
    app: gpt2-app
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: LoadBalancer
---
# Source: gpt2-helm/templates/deployment.yaml
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gpt2-deployment
  labels:
    app: gpt2-app
    env: dev

spec:
  replicas: 1
  selector:
    matchLabels:
      app: gpt2-app
  template:
    metadata:
      labels:
        app: gpt2-app
        env: dev
    spec:
      volumes:
      - name: mlflow-pvc
        persistentVolumeClaim:
          claimName: mlflow-pvc
      containers:
      - name: gpt2-container
        image: fastapi-mlflow:v1
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: mlflow-pvc
          mountPath: /opt/mlflow/
        resources:
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 2
            memory: 2Gi
---
# Source: gpt2-helm/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gpt2-ingress
  labels:
    app: gpt2-app
    env: dev
  annotations:
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
    - host: local-server
      http:
        paths:
        - path: /fastapi(/|$)(.*)
          pathType: ImplementationSpecific
          backend:
            service:
              name: gpt2-service
              port:
                number: 8000
